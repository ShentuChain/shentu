syntax = "proto3";
package shentu.bounty.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/shentufoundation/shentu/x/bounty/types";

message Program {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string program_id = 1 [(gogoproto.jsontag) = "id", (gogoproto.moretags) = "yaml:\"id\""];
  string name = 2 [(gogoproto.moretags) = "yaml:\"name\""];
  // JSON by ProgramDetail
  string detail = 3 [(gogoproto.moretags) = "yaml:\"detail\""];
  string admin_address = 4 [(gogoproto.moretags) = "yaml:\"admin_address\""];
  ProgramStatus status = 5 [(gogoproto.moretags) = "yaml:\"status\""];
  repeated BountyLevel bounty_levels = 6 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"bounty_levels\""];
}

message Finding {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string program_id = 1 [(gogoproto.moretags) = "yaml:\"program_id\""];
  string finding_id = 2 [(gogoproto.jsontag) = "id", (gogoproto.moretags) = "yaml:\"id\""];
  string title = 3;
  string description = 4 [(gogoproto.moretags) = "yaml:\"description\""];
  string proof_of_concept = 5 [(gogoproto.moretags) = "yaml:\"proof_of_concept\""];
  // hash(desc + poc + submitter)
  string finding_hash = 6 [(gogoproto.moretags) = "yaml:\"finding_hash\""];
  string submitter_address = 7 [(gogoproto.moretags) = "yaml:\"submitter_address\""];
  SeverityLevel severity_level = 8 [(gogoproto.moretags) = "yaml:\"severity_level\""];
  FindingStatus status = 9 [(gogoproto.moretags) = "yaml:\"status\""];
  // JSON by FindingDetail
  string detail = 10 [(gogoproto.moretags) = "yaml:\"detail\""];
  google.protobuf.Timestamp create_time = 11
  [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"create_time\""];
}

enum ProgramStatus {
  option (gogoproto.goproto_enum_prefix) = false;

  PROGRAM_STATUS_INACTIVE = 0 [(gogoproto.enumvalue_customname) = "ProgramStatusInactive"];
  PROGRAM_STATUS_ACTIVE = 1 [(gogoproto.enumvalue_customname) = "ProgramStatusActive"];
  PROGRAM_STATUS_CLOSED = 2 [(gogoproto.enumvalue_customname) = "ProgramStatusClosed"];
}

enum SeverityLevel {
  option (gogoproto.goproto_enum_prefix) = false;

  SEVERITY_LEVEL_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "Unspecified"];
  SEVERITY_LEVEL_CRITICAL = 1 [(gogoproto.enumvalue_customname) = "Critical"];
  SEVERITY_LEVEL_HIGH = 2 [(gogoproto.enumvalue_customname) = "High"];
  SEVERITY_LEVEL_MEDIUM = 3 [(gogoproto.enumvalue_customname) = "Medium"];
  SEVERITY_LEVEL_LOW = 4 [(gogoproto.enumvalue_customname) = "Low"];
  SEVERITY_LEVEL_INFORMATIONAL = 5 [(gogoproto.enumvalue_customname) = "Informational"];
}

enum FindingStatus {
  option (gogoproto.goproto_enum_prefix) = false;

  FINDING_STATUS_SUBMITTED = 0 [(gogoproto.enumvalue_customname) = "FindingStatusSubmitted"];
  FINDING_STATUS_ACTIVE = 1 [(gogoproto.enumvalue_customname) = "FindingStatusActive"];
  FINDING_STATUS_CONFIRMED = 2 [(gogoproto.enumvalue_customname) = "FindingStatusConfirmed"];
  FINDING_STATUS_PAID = 3 [(gogoproto.enumvalue_customname) = "FindingStatusPaid"];
  FINDING_STATUS_CLOSED = 4 [(gogoproto.enumvalue_customname) = "FindingStatusClosed"];
}

message BountyLevel {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  SeverityLevel severity_level = 1 [(gogoproto.moretags) = "yaml:\"severity_level\""];
  bool   poc = 2;
  cosmos.base.v1beta1.Coin min_bounty = 3 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"min_bounty\""];
  cosmos.base.v1beta1.Coin max_bounty = 4 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"max_bounty\""];
}

//// ProgramDetail defines a program detail.
//message ProgramDetail {
//  option (gogoproto.equal) = false;
//  option (gogoproto.goproto_getters) = false;
//
//  string description = 1;
//  string scope_rules = 2;
//  string known_issues = 3;
//}

//// FindingDetail defines a finding detail.
//message FindingDetail {
//  option (gogoproto.equal) = false;
//  option (gogoproto.goproto_getters) = false;
//
//  string description = 1;
//  string proof_of_concept = 2 [(gogoproto.moretags) = "yaml:\"proof_of_concept\""];
//  repeated string program_targets = 3 [(gogoproto.moretags) = "yaml:\"program_targets\""];
//  repeated string attachments = 4;
//}