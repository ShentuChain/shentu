syntax = "proto3";
package shentu.shield.v1alpha1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/certikfoundation/shentu/x/shield/types";

// Pool contains a shield project pool's data.
message Pool {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    uint64 id = 1 [ (gogoproto.moretags) = "yaml:\"id\"" ];
    string description = 2 [ (gogoproto.moretags) = "yaml:\"description\"" ];
    string sponsor_addr = 4 [ (gogoproto.moretags) = "yaml:\"sponsor_addr\"" ];
    bool active = 5 [ (gogoproto.moretags) = "yaml:\"active\"" ];
    string shield = 6 [ (gogoproto.moretags) = "yaml:\"shield\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
    string shield_rate = 7 [ (gogoproto.moretags) = "yaml:\"shield_rate\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false ];
}

// DonationPool defines Shield Donation Pool.
message DonationPool {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    string amount = 1 [ (gogoproto.moretags) = "yaml:\"amount\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
}

// ServiceFees is a wrapper for DecCoins object.
message ServiceFees {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    repeated cosmos.base.v1beta1.DecCoin service_fees = 1 [ (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (gogoproto.moretags) = "yaml:\"service_fees\"", (gogoproto.nullable) = false ];
}

// Provider tracks total delegation, total collateral, and rewards of a provider.
message Provider {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

	// Address is the address of the provider.
    string address = 1 [ (gogoproto.moretags) = "yaml:\"address\"" ];
	// DelegationBonded is the amount of bonded delegation.
    string delegation_bonded = 2 [ (gogoproto.moretags) = "yaml:\"provider\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
    // Collateral is amount of all collaterals for the provider, including
	// those in withdraw queue but excluding those currently locked, in all
	// pools.
    string collateral = 3 [ (gogoproto.moretags) = "yaml:\"collateral\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
	// TotalLocked is the amount locked for pending claims.
    string total_locked = 4 [ (gogoproto.moretags) = "yaml:\"total_locked\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
	// Withdrawing is the amount of collateral in withdraw queues.
    string withdrawing = 5 [ (gogoproto.moretags) = "yaml:\"withdrawing\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
	// Rewards is the pooling rewards to be collected.
    repeated cosmos.base.v1beta1.DecCoin rewards = 6 [ (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (gogoproto.moretags) = "yaml:\"rewards\"", (gogoproto.nullable) = false ];
}

// Withdraw stores an ongoing withdraw of pool collateral.
message Withdraw {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

	// Address is the chain address of the provider withdrawing.    
    string address = 1 [ (gogoproto.moretags) = "yaml:\"address\"" ];
    // Amount is the amount of withdraw.
    string amount = 2 [ (gogoproto.moretags) = "yaml:\"amount\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
	// CompletionTime is the scheduled withdraw completion time.
    google.protobuf.Timestamp completion_time = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"completion_time\""];
}

// Withdraws defines an array of Withdraw objects.
message Withdraws {
    repeated Withdraw withdraws = 1 [(gogoproto.nullable) = false];
}

message Purchase {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    uint64 pool_id = 1 [ (gogoproto.moretags) = "yaml:\"pool_id\"" ];
    string purchaser = 2 [ (gogoproto.moretags) = "yaml:\"purchaser\"" ];
    string amount = 3 [ (gogoproto.moretags) = "yaml:\"amount\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
    string description = 4 [ (gogoproto.moretags) = "yaml:\"description\"" ];
    google.protobuf.Timestamp start_time = 5 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
    string shield = 6 [ (gogoproto.moretags) = "yaml:\"shield\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
    repeated RecoveringEntry recovering_entries = 7 [(gogoproto.nullable) = false];
}

message RecoveringEntry {
    google.protobuf.Timestamp recover_time = 1 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
    repeated cosmos.base.v1beta1.Coin amount = 2 [ (gogoproto.moretags) = "yaml:\"amount\"", (gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins" ];
}

message ShieldClaimProposal {
    option (gogoproto.goproto_getters) = false;
    option (gogoproto.goproto_stringer) = false;
    option (cosmos_proto.implements_interface) = "github.com/cosmos/cosmos-sdk/x/gov/types.Content";

    uint64 proposal_id = 1 [ (gogoproto.moretags) = "yaml:\"proposal_id\"" ];
    uint64 pool_id = 2 [ (gogoproto.moretags) = "yaml:\"pool_id\"" ];
    uint64 purchase_id = 3 [ (gogoproto.moretags) = "yaml:\"purchase_id\"" ];
    repeated cosmos.base.v1beta1.Coin loss = 4 [ (gogoproto.moretags) = "yaml:\"loss\"", (gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins" ];
    string evidence = 5 [ (gogoproto.moretags) = "yaml:\"evidence\"" ];
    string description = 6 [ (gogoproto.moretags) = "yaml:\"description\"" ];
    string proposer = 7 [ (gogoproto.moretags) = "yaml:\"proposer\"" ];
}

message PendingPayout {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    uint64 proposal_id = 1 [ (gogoproto.moretags) = "yaml:\"proposal_id\"" ];
    string amount = 2 [ (gogoproto.moretags) = "yaml:\"amount\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
}
