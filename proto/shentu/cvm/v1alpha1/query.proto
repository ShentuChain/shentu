syntax = "proto3";
package shentu.cvm.v1alpha1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "shentu/cvm/v1alpha1/cvm.proto";
import "cosmos/auth/v1beta1/auth.proto";
import "burrow/acm.proto";

option go_package = "github.com/certikfoundation/shentu/x/cvm/internal/types";

service Query {
  rpc Code(QueryCodeRequest) returns (QueryCodeResponse) {
    option (google.api.http).get = "/shentu/cvm/v1alpha1/contracts/{address}/code";
  }

  rpc Abi(QueryAbiRequest) returns (QueryAbiResponse) {
    option (google.api.http).get = "/shentu/cvm/v1alpha1/contracts/{address}/abi";
  }

  rpc Storage(QueryStorageRequest) returns (QueryStorageResponse) {
    option (google.api.http).get = "/shentu/cvm/v1alpha1/contracts/{address}/storage";
  }

  rpc AddressMeta(QueryAddressMetaRequest) returns (QueryAddressMetaResponse) {
    option (google.api.http).get = "/shentu/cvm/v1alpha1/contracts/{address}/meta";
  }

  rpc Meta(QueryMetaRequest) returns (QueryMetaResponse) {
    option (google.api.http).get = "/shentu/cvm/v1alpha1/meta/{hash}";
  }

  rpc Account(QueryAccountRequest) returns(acm.Account) {
    option (google.api.http).get = "/shentu/cvm/v1alpha1/account/{address}";
  }
}

message QueryCodeRequest {
  string address = 1;
}

message QueryCodeResponse {
  bytes code = 1;
}

message QueryAbiRequest {
  string address = 1 ;
}

message QueryAbiResponse {
  bytes abi = 1;
}

message QueryStorageRequest {
  string address = 1;
  string key = 2;
}

message QueryStorageResponse {
  bytes value = 1;
}

message QueryAddressMetaRequest {
  string address = 1;
}

message QueryAddressMetaResponse {
  string MetaHash = 1;
}

message QueryMetaRequest {
  string hash = 1;
}

message QueryMetaResponse {
  string meta = 1;
}

message QueryAccountRequest {
  string address = 1;
}

message CVMAccount {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;

  cosmos.auth.v1beta1.BaseAccount base_account = 1 [(gogoproto.embed) = true];
  string code = 2;
  string abi = 3;
}