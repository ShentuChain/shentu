syntax = "proto3";
package shentu.gov.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/gov/v1/gov.proto";
import "cosmos/gov/v1/query.proto";

import "shentu/gov/v1/gov.proto";

option go_package = "github.com/shentufoundation/shentu/x/gov/types/v1";

// Query defines the gRPC querier service for gov module
service CustomQuery {
  // Params queries all parameters of the gov module.
  rpc CustomParams(cosmos.gov.v1.QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/cosmos/gov/v1/custom/params";
  }

  // Proposal queries proposal details based on ProposalID.
  rpc CertVoted(QueryCertVotedRequest) returns (QueryCertVotedResponse) {
    option (google.api.http).get = "/shentu/gov/v1/cert_voted/{proposal_id}";
  }

}

message QueryCertVotedRequest {
  // proposal_id defines the unique id of the proposal.
  uint64 proposal_id = 1;
}

// QueryProposalResponse is the response type for the Query/Proposal RPC method.
message QueryCertVotedResponse {
  bool cert_voted = 1;
}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  CustomParams custom_params = 1;
}
