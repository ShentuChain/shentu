syntax = "proto3";
package shentu.cert.v1alpha1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/certikfoundation/shentu/x/cert/types";

message Certifier {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    string address = 1 [ (gogoproto.moretags) = "yaml:\"address\"" ];
    string alias = 2 [ (gogoproto.moretags) = "yaml:\"alias\"" ];
    string proposer = 3 [ (gogoproto.moretags) = "yaml:\"proposer\"" ];
    string description = 4 [ (gogoproto.moretags) = "yaml:\"description\"" ];
}

// Validator is a type for certified validator.
message Validator {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;
    
    google.protobuf.Any pubkey = 1 [(cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];
    string certifier = 2;
}

// CertifierUpdateProposal adds or removes a certifier
message CertifierUpdateProposal {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;
    option (cosmos_proto.implements_interface) = "*github.com/cosmos/cosmos-sdk/x/gov/types.Content";

    string title = 1 [ (gogoproto.moretags) = "yaml:\"title\"" ];
    string proposer = 2 [ (gogoproto.moretags) = "yaml:\"proposer\"" ];
    string alias = 3 [ (gogoproto.moretags) = "yaml:\"alias\"" ];
    string certifier = 4 [ (gogoproto.moretags) = "yaml:\"certifier\"" ];
    string description = 5 [ (gogoproto.moretags) = "yaml:\"description\"" ];
    bool add_or_remove = 6 [ (gogoproto.moretags) = "yaml:\"add_or_remove\"", (gogoproto.casttype) = "AddOrRemove" ];
}