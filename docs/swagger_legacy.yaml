---
swagger: "2.0"
info:
  version: "1.0"
  title: Shentu Chain
  description: A REST interface for state queries, transaction generation and broadcasting.
tags:
  - name: Certification
    description: Manage certifications
  - name: CVM
    description: Chain computation and state
  - name: Oracle
    description: Security oracle
  - name: Shield
    description: Shield protection
  - name: Transactions
    description: Search, encode, or broadcast transactions.
  - name: Tendermint RPC
    description: Tendermint APIs, such as query blocks, transactions and validatorset
  - name: Auth
    description: Authenticate accounts
  - name: Bank
    description: Create and broadcast transactions
  - name: Staking
    description: Stake module APIs
  - name: Governance
    description: Governance module APIs
  - name: Slashing
    description: Slashing module APIs
  - name: Distribution
    description: Fee distribution module APIs
  - name: Supply
    description: Supply module APIs
  - name: Mint
    description: Minting module APIs
schemes:
  - https
host: azuredragon.noopsbycertik.com
securityDefinitions:
  kms:
    type: basic
paths:
  /cert/certifier/{address}:
    get:
      summary: Query certifier by address
      tags:
        - Certification
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Certifier address
          required: true
          type: string
          x-example: "shentu16rpggu4j84x9km2ne6reggyqd5n5gyw3353xwv"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  address:
                    type: string
                    example: "shentu16rpggu4j84x9km2ne6reggyqd5n5gyw3353xwv"
                  alias:
                    type: string
                    example: "node1"
                  proposer:
                    type: string
                    example: "shentu1hvtvsmznq749svdkd2rfeana2age6qnjxcvrhr"
                  description:
                    type: string
                    example: "propose node1 as a certifier"
                  first:
                    type: boolean
                    example: true
        404:
          description: Failed to find result
  /cert/certifiers:
    get:
      summary: Query all certifiers
      tags:
        - Certification
      produces:
        - application/json
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  certifiers:
                    type: array
                    items:
                      type: object
                      properties:
                        certifier:
                          type: string
                          example: "shentu16rpggu4j84x9km2ne6reggyqd5n5gyw3353xwv"
                        alias:
                          type: string
                          example: "node1"
                        proposer:
                          type: string
                          example: "shentu1hvtvsmznq749svdkd2rfeana2age6qnjxcvrhr"
                        description:
                          type: string
                          example: "propose node1 as a certifier"
                        first:
                          type: boolean
                          example: true
        404:
          description: Failed to find result
  /cert/certifieralias/{alias}:
    get:
      summary: Query certifier by alias
      tags:
        - Certification
      produces:
        - application/json
      parameters:
        - in: path
          name: alias
          description: Certifier alias
          required: true
          type: string
          x-example: "node1"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  certifier:
                    type: string
                    example: "shentu16rpggu4j84x9km2ne6reggyqd5n5gyw3353xwv"
                  alias:
                    type: string
                    example: "node1"
                  proposer:
                    type: string
                    example: "shentu1hvtvsmznq749svdkd2rfeana2age6qnjxcvrhr"
                  description:
                    type: string
                    example: "propose node1 as a certifier"
                  first:
                    type: boolean
                    example: true
        404:
          description: Failed to find result
  /cert/validator/{pubkey}:
    get:
      summary: Query validator by pubkey
      tags:
        - Certification
      produces:
        - application/json
      parameters:
        - in: path
          name: pubkey
          description: Validator pubkey
          required: true
          type: string
          x-example: "shentuvalconspub1addwnpepqtxtlwnjnayy0lcyvfye7zju99crykxmt28h740zqu3tcpjmjcggxkpgpqy"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                properties:
                  certifier:
                    type: string
                    example: "shentu16rpggu4j84x9km2ne6reggyqd5n5gyw3353xwv"
        404:
          description: Failed to find result
  /cert/validators:
    get:
      summary: Query all validators
      tags:
        - Certification
      produces:
        - application/json
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                properties:
                  validators:
                    type: array
                    items:
                      type: string
                      example: "shentuvalconspub1addwnpepqtxtlwnjnayy0lcyvfye7zju99crykxmt28h740zqu3tcpjmjcggxkpgpqy"
        404:
          description: Failed to find result
  /cert/platform/{pubkey}:
    get:
      summary: Query platform by validator pubkey
      tags:
        - Certification
      produces:
        - application/json
      parameters:
        - in: path
          name: pubkey
          description: Platform pubkey
          required: true
          type: string
          x-example: "shentuvalconspub1addwnpepqtxtlwnjnayy0lcyvfye7zju99crykxmt28h740zqu3tcpjmjcggxkpgpqy"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  platform:
                    type: string
                    example: "a platform"
        404:
          description: Failed to find result
  /cert/certificate/id/{certificateid}:
    get:
      summary: Query certificate by id
      tags:
        - Certification
      produces:
        - application/json
      parameters:
        - in: path
          name: certificateid
          description: Certificate ID
          required: true
          type: string
          x-example: "1"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "1"
              result:
                type: object
                properties:
                  certificate_id:
                    type: string
                    example: "1"
                  content:
                    type: object
                    properties:
                      type:
                        type: string
                        example: "cert/Compilation"
                      value:
                        type: object
                        properties:
                          content:
                            type: string
                            example: "ff"
                  compilation_content:
                    type: object
                    properties:
                      compiler:
                        type: string
                        example: "solc0.5.15"
                      bytecode_hash:
                        type: string
                        example: "BytecodeHash"
                  description:
                    type: string
                    example: "a description for the compilation"
                  certifier:
                    type: string
                    example: "shentu16rpggu4j84x9km2ne6reggyqd5n5gyw3353xwv"
        404:
          description: Failed to find result
  /cert/certificates:
    get:
      summary: Query all certificates
      tags:
        - Certification
      produces:
        - application/json
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "1"
              result:
                type: object
                properties:
                  total:
                    type: string
                    example: "1"
                  certificates:
                    type: array
                    items:
                      type: object
                      properties:
                        certificate_id:
                          type: string
                          example: "1"
                        content:
                          type: object
                          properties:
                            type:
                              type: string
                              example: "cert/Compilation"
                            value:
                              type: string
                              example: "SourceCodeHash"
                        compilation_content:
                          type: object
                          properties:
                            compiler:
                              type: string
                              example: "compiler"
                            bytecode_hash:
                              type: string
                              example: "BytecodeHash"
                        description:
                          type: string
                          example: "a description for the compilation"
                        certifier:
                          type: string
                          example: "shentu16rpggu4j84x9km2ne6reggyqd5n5gyw3353xwv"
        404:
          description: Failed to find result

  /cvm/code/{address}:
    get:
      summary: Query contract code by address
      tags:
        - CVM
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Code address
          required: true
          type: string
          x-example: "shentu1tq980d0dz7jjrtv9j5sqt79sv7zw0rt0zsewne"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  code:
                    type: string
                    example: "6080604052348015600F57600080FD5B506004361060285760003560E01C80630C49C36C14602D575B600080FD5B60336049565B6040518082815260200191505060405180910390F35B6000603790509056FEA2646970667358221220B186AF84263D62E4CE7A1E4AAD7CC2203112EA9BCD0967C33D611C4D7850107364736F6C63430006020033"
        404:
          description: Failed to find result
  /cvm/storage/{address}/{key}:
    get:
      summary: Query storage value by contract address and storage key
      tags:
        - CVM
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Storage address
          required: true
          type: string
          x-example: "shentu1tq980d0dz7jjrtv9j5sqt79sv7zw0rt0zsewne"
        - in: path
          name: key
          description: Storage key
          required: true
          type: string
          x-example: "0"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  value:
                    type: string
                    example: "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOk="
        404:
          description: Failed to find result
  /cvm/abi/{address}:
    get:
      summary: Query contract abi by address
      tags:
        - CVM
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Abi address
          required: true
          type: string
          x-example: "shentu1tq980d0dz7jjrtv9j5sqt79sv7zw0rt0zsewne"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  abi:
                    type: string
                    example: "W3siaW5wdXRzIjpbXSwibmFtZSI6InNheUhpIiwib3V0cHV0cyI6W3siaW50ZXJuYWxUeXBlIjoidWludDI1NiIsIm5hbWUiOiIiLCJ0eXBlIjoidWludDI1NiJ9XSwic3RhdGVNdXRhYmlsaXR5IjoicHVyZSIsInR5cGUiOiJmdW5jdGlvbiJ9XQ=="
        404:
          description: Failed to find result
  /cvm/address-meta/{address}:
    get:
      summary: Query contract meta by address
      tags:
        - CVM
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Address-meta address
          required: true
          type: string
          x-example: "shentu1tq980d0dz7jjrtv9j5sqt79sv7zw0rt0zsewne"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  metahash:
                    type: string
                    example: "CodeHash:\"DF20D8746ACB23CCB06A0708ECA726FCF9198E9A37F720A0E56F359BB490F97C\" MetadataHash:\"DEAA71516D0E08DA9719BF31E907A502A28AD0E6F62899193EF3D72D7F9DBB6F\" "
        404:
          description: Failed to find result
  /cvm/meta/{hash}:
    get:
      summary: Query metadata by metadata hash
      tags:
        - CVM
      produces:
        - application/json
      parameters:
        - in: path
          name: hash
          description: Meta hash
          required: true
          type: string
          x-example: "856F4E4AD972EDDAFE280B98CFFEB127777C51DB08016CC5E921DA9983840AB8"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  meta:
                    type: string
                    example: "{\"ContractName\":\"Simple\",\"SourceFile\":\"simple.sol\",\"CompilerVersion\":\"0.6.2+commit.bacdbe57\",\"Abi\":[{\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]}"
        404:
          description: Failed to find result

  /cvm/contract/{address}:
    get:
      summary: Query contract account information
      tags:
        - CVM
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: contract address
          required: true
          type: string
          x-example: "shentu1tq980d0dz7jjrtv9j5sqt79sv7zw0rt0zsewne"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  address:
                    type: string
                    example: "shentu1tq980d0dz7jjrtv9j5sqt79sv7zw0rt0zsewne"
                  coins:
                    $ref: "#/definitions/CertikCoins"
                  public_key:
                    example: null
                  account_number:
                    type: string
                    example: "9"
                  sequence:
                    type: string
                    example: "0"
                  code:
                    type: string
                    example: "6080604052348015600F57600080FD5B506004361060285760003560E01C80630C49C36C14602D575B600080FD5B60336049565B6040518082815260200191505060405180910390F35B6000603790509056FEA2646970667358221220B186AF84263D62E4CE7A1E4AAD7CC2203112EA9BCD0967C33D611C4D7850107364736F6C63430006020033"
                  abi:
                    type: string
                    example: "[{\"inputs\":[],\"name\":\"sayHi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]"
        404:
          description: Failed to find result

  /oracle/operator/{address}:
    get:
      summary: Query operator by address
      tags:
        - Oracle
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Operator address
          required: true
          type: string
          x-example: "shentu16rpggu4j84x9km2ne6reggyqd5n5gyw3353xwv"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  address:
                    type: string
                    example: "shentu16rpggu4j84x9km2ne6reggyqd5n5gyw3353xwv"
                  proposer:
                    type: string
                    example: "shentu1hvtvsmznq749svdkd2rfeana2age6qnjxcvrhr"
                  collateral:
                    $ref: "#/definitions/CertikCoins"
                  accumulated_rewards:
                    $ref: "#/definitions/CertikCoins"
                  name:
                    type: string
                    example: "jack"
        404:
          description: Failed to find result

  /oracle/operators:
    get:
      summary: Query all operators
      tags:
        - Oracle
      produces:
        - application/json
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      example: "shentu16rpggu4j84x9km2ne6reggyqd5n5gyw3353xwv"
                    proposer:
                      type: string
                      example: "shentu1hvtvsmznq749svdkd2rfeana2age6qnjxcvrhr"
                    collateral:
                      $ref: "#/definitions/CertikCoins"
                    accumulated_rewards:
                      $ref: "#/definitions/CertikCoins"
                    name:
                      type: string
                      example: "jack"
        404:
          description: Failed to find result

  /oracle/withdraws:
    get:
      summary: Query all withdrawals
      tags:
        - Oracle
      produces:
        - application/json
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      example: "shentu16rpggu4j84x9km2ne6reggyqd5n5gyw3353xwv"
                    amount:
                      $ref: "#/definitions/CertikCoins"
                    due_block:
                      type: string
                      example: "78"
        404:
          description: Failed to find result

  /oracle/task:
    get:
      summary: Query task
      tags:
        - Oracle
      produces:
        - application/json
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  contract:
                    type: string
                    example: "0x1234567890abcdef"
                  function:
                    type: string
                    example: "funcA"
                  begin_block:
                    type: string
                    example: "78"
                  bounty:
                    $ref: "#/definitions/CertikCoins"
                  description:
                    type: string
                    example: "This is a description"
                  expiration:
                    type: string
                    example: "2020-10-27T20:29:34.755279Z"
                  creater:
                    type: string
                    example: "shentu1hvtvsmznq749svdkd2rfeana2age6qnjxcvrhr"
                  responses:
                    type: array
                    items:
                      type: object
                      properties:
                        operator:
                          type: string
                          example: "shentu1hvtvsmznq749svdkd2rfeana2age6qnjxcvrhr"
                        score:
                          type: string
                          example: "255"
                        weight:
                          type: string
                          example: "100"
                        reward:
                          $ref: "#/definitions/CertikCoins"
                  result:
                    type: string
                    example: "255"
                  closing_block:
                    type: string
                    example: "85"
                  waiting_blocks:
                    type: string
                    example: "7"
                  status:
                    type: string
                    example: "1"
        404:
          description: Failed to find result

  /oracle/response:
    get:
      summary: Query response
      tags:
        - Oracle
      produces:
        - application/json
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  operator:
                    type: string
                    example: "shentu1hvtvsmznq749svdkd2rfeana2age6qnjxcvrhr"
                  score:
                    type: string
                    example: "255"
                  weight:
                    type: string
                    example: "100"
                  reward:
                    $ref: "#/definitions/CertikCoins"
        404:
          description: Failed to find result

  /shield/pools:
    get:
      summary: Query all shield pools
      tags:
        - Shield
      produces:
        - application/json
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "1"
                    description:
                      type: string
                      example: "this is a description"
                    sponsor:
                      type: string
                      example: "abc"
                    sponsor_address:
                      type: string
                      example: "shentu16rpggu4j84x9km2ne6reggyqd5n5gyw3353xwv"
                    shield_limit:
                      type: string
                      example: "100000"
                    active:
                      type: boolean
                      example: true
                    shield:
                      type: string
                      example: "10000"
        404:
          description: Failed to find result

  /shield/pool/id/{poolID}:
    get:
      summary: Query pool by pool ID
      tags:
        - Shield
      produces:
        - application/json
      parameters:
        - in: path
          name: poolID
          description: Pool ID
          required: true
          type: string
          x-example: "1"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  id:
                    type: string
                    example: "1"
                  description:
                    type: string
                    example: "this is a description"
                  sponsor:
                    type: string
                    example: "abc"
                  sponsor_address:
                    type: string
                    example: "shentu16rpggu4j84x9km2ne6reggyqd5n5gyw3353xwv"
                  shield_limit:
                    type: string
                    example: "100000"
                  active:
                    type: boolean
                    example: true
                  shield:
                    type: string
                    example: "10000"
        404:
          description: Failed to find result

  /shield/pool/sponsor/{sponsor}:
    get:
      summary: Query pool by sponsor name
      tags:
        - Shield
      produces:
        - application/json
      parameters:
        - in: path
          name: sponsor
          description: Sponsor name
          required: true
          type: string
          x-example: "abc"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  id:
                    type: string
                    example: "1"
                  description:
                    type: string
                    example: "this is a description"
                  sponsor:
                    type: string
                    example: "abc"
                  sponsor_address:
                    type: string
                    example: "shentu16rpggu4j84x9km2ne6reggyqd5n5gyw3353xwv"
                  shield_limit:
                    type: string
                    example: "100000"
                  active:
                    type: boolean
                    example: true
                  shield:
                    type: string
                    example: "10000"
        404:
          description: Failed to find result

  /shield/pool/{poolID}/purchases:
    get:
      summary: Query purchases in a pool
      tags:
        - Shield
      produces:
        - application/json
      parameters:
        - in: path
          name: poolID
          description: Pool ID
          required: true
          type: string
          x-example: "1"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: array
                items:
                  type: object
                  properties:
                    pool_id:
                      type: string
                      example: "1"
                    purchaser:
                      type: string
                      example: "shentu1nqvk0skpfqpc86fvqnul36sufeq33yp0rm7ftg"
                    entries:
                      type: array
                      items:
                        type: object
                        properties:
                          purchase_id:
                            type: string
                            example: "1"
                          protection_end_time:
                            type: string
                            example: "2020-10-20T20:29:34.755279Z"
                          deletion_time:
                            type: string
                            example: "2020-11-20T20:29:34.755279Z"
                          description:
                            type: string
                            example: "This is a description"
                          shield:
                            type: string
                            example: "10000"
                          service_fees:
                            type: object
                            properties:
                              native:
                                $ref: "#/definitions/CertikDecCoin"
                              foreign:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    denom:
                                      type: string
                                      example: "abc"
                                    amount:
                                      type: string
                                      example: "0.9"
        404:
          description: Failed to find result

  /shield/pool/{poolID}/purchaser/{address}/purchases:
    get:
      summary: Query an account's all purchases in a pool
      tags:
        - Shield
      produces:
        - application/json
      parameters:
        - in: path
          name: poolID
          description: Pool ID
          required: true
          type: string
          x-example: "1"
        - in: path
          name: address
          description: Address
          required: true
          type: string
          x-example: "shentu1nqvk0skpfqpc86fvqnul36sufeq33yp0rm7ftg"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  pool_id:
                    type: string
                    example: "1"
                  purchaser:
                    type: string
                    example: "shentu1nqvk0skpfqpc86fvqnul36sufeq33yp0rm7ftg"
                  entries:
                    type: array
                    items:
                      type: object
                      properties:
                        purchase_id:
                          type: string
                          example: "1"
                        protection_end_time:
                          type: string
                          example: "2020-10-20T20:29:34.755279Z"
                        deletion_time:
                          type: string
                          example: "2020-11-20T20:29:34.755279Z"
                        description:
                          type: string
                          example: "This is a description"
                        shield:
                          type: string
                          example: "10000"
                        service_fees:
                          type: object
                          properties:
                            native:
                              $ref: "#/definitions/CertikDecCoin"
                            foreign:
                              type: array
                              items:
                                type: object
                                properties:
                                  denom:
                                    type: string
                                    example: "abc"
                                  amount:
                                    type: string
                                    example: "0.9"
        404:
          description: Failed to find result

  /shield/provider/{address}:
    get:
      summary: Query a provider by address
      tags:
        - Shield
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Address
          required: true
          type: string
          x-example: "shentu1nqvk0skpfqpc86fvqnul36sufeq33yp0rm7ftg"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  address:
                    type: string
                    example: "shentu1nqvk0skpfqpc86fvqnul36sufeq33yp0rm7ftg"
                  delegation_bonded:
                    type: string
                    example: "10000000"
                  collateral:
                    type: string
                    example: "1000000"
                  total_locked:
                    type: string
                    example: "0"
                  withrawing:
                    type: string
                    example: "0"
                  rewards:
                    type: object
                    properties:
                      native:
                        $ref: "#/definitions/CertikDecCoin"
                      foreign:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: "abc"
                            amount:
                              type: string
                              example: "0.9"
        404:
          description: Failed to find result

  /shield/providers:
    get:
      summary: Query all providers
      tags:
        - Shield
      produces:
        - application/json
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      example: "shentu1nqvk0skpfqpc86fvqnul36sufeq33yp0rm7ftg"
                    delegation_bonded:
                      type: string
                      example: "10000000"
                    collateral:
                      type: string
                      example: "1000000"
                    total_locked:
                      type: string
                      example: "0"
                    withrawing:
                      type: string
                      example: "0"
                    rewards:
                      type: object
                      properties:
                        native:
                          $ref: "#/definitions/CertikDecCoin"
                        foreign:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                                example: "abc"
                              amount:
                                type: string
                                example: "0.9"
        404:
          description: Failed to find result

  /shield/purchaser/{address}/purchases:
    get:
      summary: Query a purchaser's purchases
      tags:
        - Shield
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Address
          required: true
          type: string
          x-example: "shentu1nqvk0skpfqpc86fvqnul36sufeq33yp0rm7ftg"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: array
                items:
                  type: object
                  properties:
                    pool_id:
                      type: string
                      example: "1"
                    purchaser:
                      type: string
                      example: "shentu1nqvk0skpfqpc86fvqnul36sufeq33yp0rm7ftg"
                    entries:
                      type: array
                      items:
                        type: object
                        properties:
                          purchase_id:
                            type: string
                            example: "1"
                          protection_end_time:
                            type: string
                            example: "2020-10-20T20:29:34.755279Z"
                          deletion_time:
                            type: string
                            example: "2020-11-20T20:29:34.755279Z"
                          description:
                            type: string
                            example: "This is a description"
                          shield:
                            type: string
                            example: "10000"
                          service_fees:
                            type: object
                            properties:
                              native:
                                $ref: "#/definitions/CertikDecCoin"
                              foreign:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    denom:
                                      type: string
                                      example: "abc"
                                    amount:
                                      type: string
                                      example: "0.9"
        404:
          description: Failed to find result

  /shield/purchases:
    get:
      summary: Query all purchases
      tags:
        - Shield
      produces:
        - application/json
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: array
                items:
                  type: object
                  properties:
                    purchase_id:
                      type: string
                      example: "1"
                    protection_end_time:
                      type: string
                      example: "2020-10-20T20:29:34.755279Z"
                    deletion_time:
                      type: string
                      example: "2020-11-20T20:29:34.755279Z"
                    description:
                      type: string
                      example: "This is a description"
                    shield:
                      type: string
                      example: "10000"
                    service_fees:
                      type: object
                      properties:
                        native:
                          $ref: "#/definitions/CertikDecCoin"
                        foreign:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                                example: "abc"
                              amount:
                                type: string
                                example: "0.9"
        404:
          description: Failed to find result

  /shield/pool_params:
    get:
      summary: Query pool parameters
      tags:
        - Shield
      produces:
        - application/json
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  protection_period:
                    type: string
                    example: "1814400000000000"
                  shield_fees_rate:
                    type: string
                    example: "0.007690000000000000"
                  withdraw_period:
                    type: string
                    example: "1814400000000000"
                  pool_shield_limit:
                    type: string
                    example: "0.500000000000000000"
                  min_shield_purchase:
                    $ref: "#/definitions/CertikCoins"
        404:
          description: Failed to find result

  /shield/claim_params:
    get:
      summary: Query claim parameters
      tags:
        - Shield
      produces:
        - application/json
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  claim_period:
                    type: string
                    example: "1814400000000000"
                  payout_period:
                    type: string
                    example: "4838400000000000"
                  min_deposit:
                    $ref: "#/definitions/CertikCoins"
                  deposit_rate:
                    type: string
                    example: "0.100000000000000000"
                  fees_rate:
                    type: string
                    example: "0.010000000000000000"
        404:
          description: Failed to find result

  /shield/status:
    get:
      summary: Query global status
      tags:
        - Shield
      produces:
        - application/json
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  total_collateral:
                    type: string
                    example: "1814400"
                  total_shield:
                    type: string
                    example: "48384000"
                  total_withdrawing:
                    type: string
                    example: "0"
                  current_service_fees:
                    type: object
                    properties:
                      native:
                        $ref: "#/definitions/CertikDecCoin"
                      foreign:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: "abc"
                            amount:
                              type: string
                              example: "0.9"
                  remaining_service_fees:
                    type: object
                    properties:
                      native:
                        $ref: "#/definitions/CertikDecCoin"
                      foreign:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: "abc"
                            amount:
                              type: string
                              example: "0.9"
                  global_shield_staking_pool:
                    type: string
                    example: "18344400"
        404:
          description: Failed to find result

  /shield/staked_for_shield/{poolID}/{address}:
    get:
      summary: Query stake for shield
      tags:
        - Shield
      produces:
        - application/json
      parameters:
        - in: path
          name: poolID
          description: Pool ID
          required: true
          type: string
          x-example: "1"
        - in: path
          name: address
          description: Address
          required: true
          type: string
          x-example: "shentu1nqvk0skpfqpc86fvqnul36sufeq33yp0rm7ftg"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  pool_id:
                    type: string
                    example: "1"
                  purchaser:
                    type: string
                    example: "shentu1nqvk0skpfqpc86fvqnul36sufeq33yp0rm7ftg"
                  amount:
                    type: string
                    example: "10000"
                  withdraw_requested:
                    type: string
                    example: "1000"
        404:
          description: Failed to find result

  /shield/shield_staking_rate:
    get:
      summary: Query shield staking rate
      tags:
        - Shield
      produces:
        - application/json
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: string
                example: "2.000000000000000000"
        404:
          description: Failed to find result

  /shield/reimbursement/{proposalID}:
    get:
      summary: Query reimbursement by proposal ID
      tags:
        - Shield
      produces:
        - application/json
      parameters:
        - in: path
          name: proposalID
          description: Proposal ID
          required: true
          type: string
          x-example: "1"
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  amount:
                    $ref: "#/definitions/CertikCoins"
                  beneficiary:
                    type: string
                    example: "shentu1nqvk0skpfqpc86fvqnul36sufeq33yp0rm7ftg"
                  payout_time:
                    type: string
                    example: "2020-11-20T20:29:34.755279Z"
        404:
          description: Failed to find result

  /shield/reimbursements:
    get:
      summary: Query all reimbursement
      tags:
        - Shield
      produces:
        - application/json
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: array
                items:
                  type: object
                  properties:
                    ProposaoID:
                      type: string
                      example: "1"
                    Reimbursement:
                      type: object
                      properties:
                        amount:
                          $ref: "#/definitions/CertikCoins"
                        beneficiary:
                          type: string
                          example: "shentu1nqvk0skpfqpc86fvqnul36sufeq33yp0rm7ftg"
                        payout_time:
                          type: string
                          example: "2020-11-20T20:29:34.755279Z"
        404:
          description: Failed to find result

  /node_info:
    get:
      description: Information about the connected node
      summary: The properties of the connected node
      tags:
        - Tendermint RPC
      produces:
        - application/json
      responses:
        200:
          description: Node status
          schema:
            type: object
            properties:
              application_version:
                properties:
                  build_tags:
                    type: string
                  client_name:
                    type: string
                  commit:
                    type: string
                  go:
                    type: string
                  name:
                    type: string
                  server_name:
                    type: string
                  version:
                    type: string
              node_info:
                properties:
                  id:
                    type: string
                  moniker:
                    type: string
                    example: validator-name
                  protocol_version:
                    properties:
                      p2p:
                        type: string
                        example: 7
                      block:
                        type: string
                        example: 10
                      app:
                        type: string
                        example: 0
                  network:
                    type: string
                    example: shentu
                  channels:
                    type: string
                  listen_addr:
                    type: string
                    example: 192.168.56.1:26656
                  version:
                    description: Tendermint version
                    type: string
                    example: 0.15.0
                  other:
                    description: more information on versions
                    type: object
                    properties:
                      tx_index:
                        type: string
                        example: on
                      rpc_address:
                        type: string
                        example: tcp://0.0.0.0:26657
        500:
          description: Failed to query node status
  /syncing:
    get:
      summary: Syncing state of node
      tags:
        - Tendermint RPC
      description: Get if the node is currently syning with other nodes
      produces:
        - application/json
      responses:
        200:
          description: Node syncing status
          schema:
            type: object
            properties:
              syncing:
                type: boolean
        500:
          description: Server internal error
  /blocks/latest:
    get:
      summary: Get the latest block
      tags:
        - Tendermint RPC
      produces:
        - application/json
      responses:
        200:
          description: The latest block
          schema:
            $ref: "#/definitions/BlockQuery"
        500:
          description: Server internal error
  /blocks/{height}:
    get:
      summary: Get a block at a certain height
      tags:
        - Tendermint RPC
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          type: number
          x-example: 1
      responses:
        200:
          description: The block at a specific height
          schema:
            $ref: "#/definitions/BlockQuery"
        404:
          description: Request block height doesn't
        400:
          description: Invalid height
        500:
          description: Server internal error
  /validatorsets/latest:
    get:
      summary: Get the latest validator set
      tags:
        - Tendermint RPC
      produces:
        - application/json
      responses:
        200:
          description: The validator set at the latest block height
          schema:
            type: object
            properties:
              block_height:
                type: string
              validators:
                type: array
                items:
                  $ref: "#/definitions/TendermintValidator"
        500:
          description: Server internal error
  /validatorsets/{height}:
    get:
      summary: Get a validator set a certain height
      tags:
        - Tendermint RPC
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          type: number
          x-example: 1
      responses:
        200:
          description: The validator set at a specific block height
          schema:
            type: object
            properties:
              block_height:
                type: string
              validators:
                type: array
                items:
                  $ref: "#/definitions/TendermintValidator"
        404:
          description: Block at height not available
        400:
          description: Invalid height
        500:
          description: Server internal error
  /txs/{hash}:
    get:
      summary: Get a Tx by hash
      tags:
        - Transactions
      description: Retrieve a transaction using its hash.
      produces:
        - application/json
      parameters:
        - in: path
          name: hash
          description: Tx hash
          required: true
          type: string
          x-example: BCBE20E8D46758B96AE5883B792858296AC06E51435490FBDCAE25A72B3CC76B
      responses:
        200:
          description: Tx with the provided hash
          schema:
            $ref: "#/definitions/TxQuery"
        500:
          description: Internal Server Error
  /txs:
    get:
      tags:
        - Transactions
      summary: Search transactions
      description: Search transactions by events.
      produces:
        - application/json
      parameters:
        - in: query
          name: message.action
          type: string
          description: "transaction events such as 'message.action=send' which results in the following endpoint: 'GET /txs?message.action=send'. note that each module documents its own events. look for xx_events.md in the corresponding cosmos-sdk/docs/spec directory"
          x-example: "send"
        - in: query
          name: message.sender
          type: string
          description: "transaction tags with sender: 'GET /txs?message.action=send&message.sender=cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv'"
          x-example: "cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv"
        - in: query
          name: page
          description: Page number
          type: integer
          x-example: 1
        - in: query
          name: limit
          description: Maximum number of items per page
          type: integer
          x-example: 1
        - in: query
          name: tx.minheight
          type: integer
          description: "transactions on blocks with height greater or equal this value"
          x-example: 25
        - in: query
          name: tx.maxheight
          type: integer
          description: "transactions on blocks with height less than or equal this value"
          x-example: 800000
      responses:
        200:
          description: All txs matching the provided events
          schema:
            $ref: "#/definitions/PaginatedQueryTxs"
        400:
          description: Invalid search events
        500:
          description: Internal Server Error
    post:
      tags:
        - Transactions
      summary: Broadcast a signed tx
      description: Broadcast a signed tx to a full node
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: txBroadcast
          description: The tx must be a signed StdTx. The supported broadcast modes include `"block"`(return after tx commit), `"sync"`(return afer CheckTx) and `"async"`(return right away).
          required: true
          schema:
            type: object
            properties:
              tx:
                $ref: "#/definitions/StdTx"
              mode:
                type: string
                example: block
      responses:
        200:
          description: Tx broadcasting result
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        500:
          description: Internal Server Error
  /txs/encode:
    post:
      tags:
        - Transactions
      summary: Encode a transaction to the Amino wire format
      description: Encode a transaction (signed or not) from JSON to base64-encoded Amino serialized bytes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: tx
          description: The tx to encode
          required: true
          schema:
            type: object
            properties:
              tx:
                $ref: "#/definitions/StdTx"
      responses:
        200:
          description: The tx was successfully decoded and re-encoded
          schema:
            type: object
            properties:
              tx:
                type: string
                example: The base64-encoded Amino-serialized bytes for the tx
        400:
          description: The tx was malformated
        500:
          description: Server internal error
  /txs/decode:
    post:
      tags:
        - Transactions
      summary: Decode a transaction from the Amino wire format
      description: Decode a transaction (signed or not) from base64-encoded Amino serialized bytes to JSON
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: tx
          description: The tx to decode
          required: true
          schema:
            type: object
            properties:
              tx:
                type: string
                example: SvBiXe4KPqijYZoKFFHEzJ8c2HPAfv2EFUcIhx0yPagwEhTy0vPA+GGhCEslKXa4Af0uB+mfShoMCgVzdGFrZRIDMTAwEgQQwJoM
      responses:
        200:
          description: The tx was successfully decoded
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: The tx was malformated
        500:
          description: Server internal error
  /bank/balances/{address}:
    get:
      summary: Get the account balances
      tags:
        - Bank
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          type: string
          x-example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
      responses:
        200:
          description: Account balances
          schema:
            type: array
            items:
              $ref: "#/definitions/Coin"
        500:
          description: Server internal error

  /auth/accounts/{address}:
    get:
      summary: Get the account information on blockchain
      tags:
        - Auth
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address
          required: true
          type: string
          x-example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
      responses:
        200:
          description: Account information on the blockchain
          schema:
            type: object
            properties:
              type:
                type: string
              value:
                type: object
                properties:
                  account_number:
                    type: string
                  address:
                    type: string
                  public_key:
                    $ref: "#/definitions/PublicKey"
                  sequence:
                    type: string
        500:
          description: Server internel error

  /staking/delegators/{delegatorAddr}/delegations:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
    get:
      summary: Get all delegations from a delegator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Delegation"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error

  /staking/delegators/{delegatorAddr}/delegations/{validatorAddr}:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Query the current delegation between a delegator and a validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Delegation"
        400:
          description: Invalid delegator address or validator address
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/unbonding_delegations:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
    get:
      summary: Get all unbonding delegations from a delegator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UnbondingDelegation"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error

  /staking/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Query all unbonding delegations between a delegator and a validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UnbondingDelegationPair"
        400:
          description: Invalid delegator address or validator address
        500:
          description: Internal Server Error
  /staking/redelegations:
    parameters:
      - in: query
        name: delegator
        description: Bech32 AccAddress of Delegator
        required: false
        type: string
      - in: query
        name: validator_from
        description: Bech32 ValAddress of SrcValidator
        required: false
        type: string
      - in: query
        name: validator_to
        description: Bech32 ValAddress of DstValidator
        required: false
        type: string
    get:
      summary: Get all redelegations (filter by query params)
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Redelegation"
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/redelegations:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv

  /staking/delegators/{delegatorAddr}/validators:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
    get:
      summary: Query all validators that a delegator is bonded to
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Validator"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/validators/{validatorAddr}:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
      - in: path
        name: validatorAddr
        description: Bech32 ValAddress of Delegator
        required: true
        type: string
        x-example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Query a validator that a delegator is bonded to
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Validator"
        400:
          description: Invalid delegator address or validator address
        500:
          description: Internal Server Error
  /staking/validators:
    get:
      summary: Get all validator candidates. By default it returns only the bonded validators.
      parameters:
        - in: query
          name: status
          type: string
          description: The validator bond status. Must be either 'bonded', 'unbonded', or 'unbonding'.
          x-example: bonded
        - in: query
          name: page
          description: The page number.
          type: integer
          x-example: 1
        - in: query
          name: limit
          description: The maximum number of items per page.
          type: integer
          x-example: 1
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Validator"
        500:
          description: Internal Server Error
  /staking/validators/{validatorAddr}:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Query the information from a single validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Validator"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /staking/validators/{validatorAddr}/delegations:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Get all delegations from a validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Delegation"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /staking/validators/{validatorAddr}/unbonding_delegations:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Get all unbonding delegations from a validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UnbondingDelegation"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /staking/pool:
    get:
      summary: Get the current state of the staking pool
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              loose_tokens:
                type: string
              bonded_tokens:
                type: string
              inflation_last_time:
                type: string
              inflation:
                type: string
              date_last_commission_reset:
                type: string
              prev_bonded_shares:
                type: string
        500:
          description: Internal Server Error
  /staking/parameters:
    get:
      summary: Get the current staking parameter values
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              inflation_rate_change:
                type: string
              inflation_max:
                type: string
              inflation_min:
                type: string
              goal_bonded:
                type: string
              unbonding_time:
                type: string
              max_validators:
                type: integer
              bond_denom:
                type: string
        500:
          description: Internal Server Error
  # TODO: We need to either fix this route when the validator is not found or add a slashed validator in the contract tests
  #  /slashing/validators/{validatorPubKey}/signing_info:
  #    get:
  #      summary: Get sign info of given validator
  #      description: Get sign info of given validator
  #      produces:
  #        - application/json
  #      tags:
  #        - Slashing
  #      parameters:
  #        - type: string
  #          description: Bech32 validator public key
  #          name: validatorPubKey
  #          required: true
  #          in: path
  #          x-example: cosmosvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
  #      responses:
  #        200:
  #          description: OK
  #          schema:
  #            $ref: "#/definitions/SigningInfo"
  #        400:
  #          description: Invalid validator public key
  #        500:
  #          description: Internal Server Error

  /staking/all_validators:
    get:
      summary: Query all validators
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: Successfully found result
          schema:
            type: object
            properties:
              height:
                type: string
                example: "0"
              result:
                type: object
                properties:
                  Count:
                    type: string
                    example: "1"
                  Validators:
                    type: array
                    items:
                      type: object
                      properties:
                        operator_address:
                          type: string
                          example: "shentuvaloper18knfymnl2hhy83yj7ndwszt5gdluh823us8ghm"
                        consensus_pubkey:
                          type: string
                          example: "shentuvalconspub1zcjduepq969kzmatne84am2jpfdtkcrvh8fnt6skgs63dkc4s4dnp69rshhqyl6zvm"
                        jailed:
                          type: boolean
                          example: false
                        status:
                          type: integer
                          example: 2
                        tokens:
                          type: string
                          example: "2000000"
                        delegator_shares:
                          type: string
                          example: "2000000.000000000000000000"
                        description:
                          type: object
                          properties:
                            moniker:
                              type: string
                              example: "node0"
                            identity:
                              type: string
                              example: ""
                            website:
                              type: string
                              example: ""
                            security_contact:
                              type: string
                              example: ""
                            details:
                              type: string
                              example: ""
                        unbonding_height:
                          type: string
                          example: "0"
                        unbonding_time:
                          type: string
                          example: "1970-01-01T00:00:00Z"
                        commission:
                          type: object
                          properties:
                            commission_rates:
                              type: object
                              properties:
                                rate:
                                  type: string
                                  example: "0.100000000000000000"
                                max_rate:
                                  type: string
                                  example: "0.200000000000000000"
                                max_change_rate:
                                  type: string
                                  example: "0.010000000000000000"
                            update_time:
                              type: string
                              example: "2020-11-21T00:37:21.085463Z"
                        min_self_delegation:
                          type: string
                          example: "1"
        404:
          description: Failed to find result

  /slashing/signing_infos:
    get:
      summary: Get sign info of given all validators
      description: Get sign info of all validators
      produces:
        - application/json
      tags:
        - Slashing
      parameters:
        - in: query
          name: page
          description: Page number
          type: integer
          required: true
          x-example: 1
        - in: query
          name: limit
          description: Maximum number of items per page
          type: integer
          required: true
          x-example: 5
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SigningInfo"
        400:
          description: Invalid validator public key for one of the validators
        500:
          description: Internal Server Error

  /slashing/parameters:
    get:
      summary: Get the current slashing parameters
      tags:
        - Slashing
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              max_evidence_age:
                type: string
              signed_blocks_window:
                type: string
              min_signed_per_window:
                type: string
              double_sign_unbond_duration:
                type: string
              downtime_unbond_duration:
                type: string
              slash_fraction_double_sign:
                type: string
              slash_fraction_downtime:
                type: string
        500:
          description: Internal Server Error
  /gov/proposals:
    get:
      summary: Query proposals
      description: Query proposals information with parameters
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - in: query
          name: voter
          description: voter address
          required: false
          type: string
        - in: query
          name: depositor
          description: depositor address
          required: false
          type: string
        - in: query
          name: status
          description: proposal status, valid values can be `"deposit_period"`, `"voting_period"`, `"passed"`, `"rejected"`
          required: false
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/TextProposal"
        400:
          description: Invalid query parameters
        500:
          description: Internal Server Error

  /gov/proposals/{proposalId}:
    get:
      summary: Query a proposal
      description: Query a proposal by id
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/TextProposal"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/proposer:
    get:
      summary: Query proposer
      description: Query for the proposer for a proposal
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Proposer"
        400:
          description: Invalid proposal ID
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/deposits:
    get:
      summary: Query deposits
      description: Query deposits by proposalId
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Deposit"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error

  /gov/proposals/{proposalId}/deposits/{depositor}:
    get:
      summary: Query deposit
      description: Query deposit by proposalId and depositor address
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
        - type: string
          description: Bech32 depositor address
          name: depositor
          required: true
          in: path
          x-example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Deposit"
        400:
          description: Invalid proposal id or depositor address
        404:
          description: Found no deposit
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/votes:
    get:
      summary: Query voters
      description: Query voters information by proposalId
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Vote"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error

  /gov/proposals/{proposalId}/votes/{voter}:
    get:
      summary: Query vote
      description: Query vote information by proposal Id and voter address
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
        - type: string
          description: Bech32 voter address
          name: voter
          required: true
          in: path
          x-example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Vote"
        400:
          description: Invalid proposal id or voter address
        404:
          description: Found no vote
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/tally:
    get:
      summary: Get a proposal's tally result at the current time
      description: Gets a proposal's tally result at the current time. If the proposal is pending deposits (i.e status 'DepositPeriod') it returns an empty tally result.
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/TallyResult"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error
  /gov/parameters/deposit:
    get:
      summary: Query governance deposit parameters
      description: Query governance deposit parameters. The max_deposit_period units are in nanoseconds.
      produces:
        - application/json
      tags:
        - Governance
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              min_initial_deposit:
                $ref: "#/definitions/CertikCoins"
              min_deposit:
                type: array
                items:
                  $ref: "#/definitions/Coin"
              max_deposit_period:
                type: string
                example: "86400000000000"
        400:
          description: <other_path> is not a valid query request path
        404:
          description: Found no deposit parameters
        500:
          description: Internal Server Error
  /gov/parameters/tallying:
    get:
      summary: Query governance tally parameters
      description: Query governance tally parameters
      produces:
        - application/json
      tags:
        - Governance
      responses:
        200:
          description: OK
          schema:
            properties:
              DefaultTally:
                type: object
                properties:
                  threshold:
                    type: string
                    example: "0.5000000000"
                  veto:
                    type: string
                    example: "0.3340000000"
                  governance_penalty:
                    type: string
                    example: "0.0100000000"
              CertifierUpdateSecurityVoteTally:
                type: object
                properties:
                  threshold:
                    type: string
                    example: "0.5000000000"
                  veto:
                    type: string
                    example: "0.3340000000"
                  governance_penalty:
                    type: string
                    example: "0.0100000000"
              CertifierUpdateStakeVoteTally:
                type: object
                properties:
                  threshold:
                    type: string
                    example: "0.5000000000"
                  veto:
                    type: string
                    example: "0.3340000000"
                  governance_penalty:
                    type: string
                    example: "0.0100000000"
        400:
          description: <other_path> is not a valid query request path
        404:
          description: Found no tally parameters
        500:
          description: Internal Server Error
  /gov/parameters/voting:
    get:
      summary: Query governance voting parameters
      description: Query governance voting parameters. The voting_period units are in nanoseconds.
      produces:
        - application/json
      tags:
        - Governance
      responses:
        200:
          description: OK
          schema:
            properties:
              voting_period:
                type: string
                example: "86400000000000"
        400:
          description: <other_path> is not a valid query request path
        404:
          description: Found no voting parameters
        500:
          description: Internal Server Error
  /distribution/delegators/{delegatorAddr}/rewards:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: cosmos167w96tdvmazakdwkw2u57227eduula2cy572lf
    get:
      summary: Get the total rewards balance from all delegations
      description: Get the sum of all the rewards earned by delegations by a single delegator
      produces:
        - application/json
      tags:
        - Distribution
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/DelegatorTotalRewards"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error

  /distribution/delegators/{delegatorAddr}/rewards/{validatorAddr}:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Query a delegation reward
      description: Query a single delegation reward by a delegator
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Coin"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error

  /distribution/delegators/{delegatorAddr}/withdraw_address:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: cosmos167w96tdvmazakdwkw2u57227eduula2cy572lf
    get:
      summary: Get the rewards withdrawal address
      description: Get the delegations' rewards withdrawal address. This is the address in which the user will receive the reward funds
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Address"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error

  /distribution/validators/{validatorAddr}:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Validator distribution information
      description: Query the distribution information of a single validator
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ValidatorDistInfo"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /distribution/validators/{validatorAddr}/outstanding_rewards:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Fee distribution outstanding rewards of a single validator
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Coin"
        500:
          description: Internal Server Error
  /distribution/validators/{validatorAddr}/rewards:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Commission and self-delegation rewards of a single validator
      description: Query the commission and self-delegation rewards of validator.
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Coin"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error

  /distribution/community_pool:
    get:
      summary: Community pool parameters
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Coin"
        500:
          description: Internal Server Error
  /distribution/parameters:
    get:
      summary: Fee distribution parameters
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            properties:
              base_proposer_reward:
                type: string
              bonus_proposer_reward:
                type: string
              community_tax:
                type: string
        500:
          description: Internal Server Error
  /minting/parameters:
    get:
      summary: Minting module parameters
      tags:
        - Mint
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            properties:
              mint_denom:
                type: string
              inflation_rate_change:
                type: string
              inflation_max:
                type: string
              inflation_min:
                type: string
              goal_bonded:
                type: string
              blocks_per_year:
                type: string
        500:
          description: Internal Server Error
  /minting/inflation:
    get:
      summary: Current minting inflation value
      tags:
        - Mint
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: string
        500:
          description: Internal Server Error
  /minting/annual-provisions:
    get:
      summary: Current minting annual provisions value
      tags:
        - Mint
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: string
        500:
          description: Internal Server Error
  /supply/total:
    get:
      summary: Total supply of coins in the chain
      tags:
        - Supply
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Supply"
        500:
          description: Internal Server Error
  /supply/total/{denomination}:
    parameters:
      - in: path
        name: denomination
        description: Coin denomination
        required: true
        type: string
        x-example: uatom
    get:
      summary: Total supply of a single coin denomination
      tags:
        - Supply
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: string
        400:
          description: Invalid coin denomination
        500:
          description: Internal Server Error
definitions:
  CertikBaseReq:
    type: object
    properties:
      from:
        type: string
        example: "shentu1f0rsp7qg6x7lvfwpph4c3m64kcsz5pjdqymzmp"
      memo:
        type: string
        example: "This is a memo!"
      chain_id:
        type: string
        example: "shentuchain"
      account_number:
        type: integer
        format: uint64
        example: "0"
      sequence:
        type: integer
        format: uint64
        example: "1"
      fees:
        $ref: "#/definitions/CertikCoins"
      gas:
        type: string
        example: "200000"
      gas_adjustment:
        type: string
        example: "1.2"
      simulate:
        type: boolean
        example: false
  CertikCoins:
    type: array
    items:
      type: object
      properties:
        denom:
          type: string
          example: "uctk"
        amount:
          type: string
          example: "50000"
  CertikDecCoin:
    type: array
    items:
      type: object
      properties:
        denom:
          type: string
          example: "uctk"
        amount:
          type: string
          example: "50.5"
  CheckTxResult:
    type: object
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        type: array
        items:
          $ref: "#/definitions/KVPair"
    example:
      code: 0
      data: data
      log: log
      gas_used: 5000
      gas_wanted: 10000
      info: info
      tags:
        - ""
        - ""
  DeliverTxResult:
    type: object
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        type: array
        items:
          $ref: "#/definitions/KVPair"
    example:
      code: 5
      data: data
      log: log
      gas_used: 5000
      gas_wanted: 10000
      info: info
      tags:
        - ""
        - ""
  BroadcastTxCommitResult:
    type: object
    properties:
      check_tx:
        $ref: "#/definitions/CheckTxResult"
      deliver_tx:
        $ref: "#/definitions/DeliverTxResult"
      hash:
        $ref: "#/definitions/Hash"
      height:
        type: integer
  KVPair:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  Msg:
    type: string
  Address:
    type: string
    description: bech32 encoded address
    example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
  ValidatorAddress:
    type: string
    description: bech32 encoded address
    example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
  Coin:
    type: object
    properties:
      denom:
        type: string
        example: stake
      amount:
        type: string
        example: "50"
  Hash:
    type: string
    example: EE5F3404034C524501629B56E0DDC38FAD651F04
  TxQuery:
    type: object
    properties:
      hash:
        type: string
        example: "D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656"
      height:
        type: number
        example: 368
      tx:
        $ref: "#/definitions/StdTx"
      result:
        type: object
        properties:
          log:
            type: string
          gas_wanted:
            type: string
            example: "200000"
          gas_used:
            type: string
            example: "26354"
          tags:
            type: array
            items:
              $ref: "#/definitions/KVPair"
  PaginatedQueryTxs:
    type: object
    properties:
      total_count:
        type: number
        example: 1
      count:
        type: number
        example: 1
      page_number:
        type: number
        example: 1
      page_total:
        type: number
        example: 1
      limit:
        type: number
        example: 30
      txs:
        type: array
        items:
          $ref: "#/definitions/TxQuery"
  StdTx:
    type: object
    properties:
      msg:
        type: array
        items:
          $ref: "#/definitions/Msg"
      fee:
        type: object
        properties:
          gas:
            type: string
          amount:
            type: array
            items:
              $ref: "#/definitions/Coin"
      memo:
        type: string
      signature:
        type: object
        properties:
          signature:
            type: string
            example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
          pub_key:
            type: object
            properties:
              type:
                type: string
                example: "tendermint/PubKeySecp256k1"
              value:
                type: string
                example: "Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH"
          account_number:
            type: string
            example: "0"
          sequence:
            type: string
            example: "0"
  BlockID:
    type: object
    properties:
      hash:
        $ref: "#/definitions/Hash"
      parts:
        type: object
        properties:
          total:
            type: number
            example: 0
          hash:
            $ref: "#/definitions/Hash"
  BlockHeader:
    type: object
    properties:
      chain_id:
        type: string
        example: cosmoshub-2
      height:
        type: number
        example: 1
      time:
        type: string
        example: "2017-12-30T05:53:09.287+01:00"
      num_txs:
        type: number
        example: 0
      last_block_id:
        $ref: "#/definitions/BlockID"
      total_txs:
        type: number
        example: 35
      last_commit_hash:
        $ref: "#/definitions/Hash"
      data_hash:
        $ref: "#/definitions/Hash"
      validators_hash:
        $ref: "#/definitions/Hash"
      next_validators_hash:
        $ref: "#/definitions/Hash"
      consensus_hash:
        $ref: "#/definitions/Hash"
      app_hash:
        $ref: "#/definitions/Hash"
      last_results_hash:
        $ref: "#/definitions/Hash"
      evidence_hash:
        $ref: "#/definitions/Hash"
      proposer_address:
        $ref: "#/definitions/Address"
      version:
        type: object
        properties:
          block:
            type: string
            example: 10
          app:
            type: string
            example: 0
  Block:
    type: object
    properties:
      header:
        $ref: "#/definitions/BlockHeader"
      txs:
        type: array
        items:
          type: string
      evidence:
        type: array
        items:
          type: string
      last_commit:
        type: object
        properties:
          block_id:
            $ref: "#/definitions/BlockID"
          precommits:
            type: array
            items:
              type: object
              properties:
                validator_address:
                  type: string
                validator_index:
                  type: string
                  example: "0"
                height:
                  type: string
                  example: "0"
                round:
                  type: string
                  example: "0"
                timestamp:
                  type: string
                  example: "2017-12-30T05:53:09.287+01:00"
                type:
                  type: number
                  example: 2
                block_id:
                  $ref: "#/definitions/BlockID"
                signature:
                  type: string
                  example: "7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ=="
  BlockQuery:
    type: object
    properties:
      block_meta:
        type: object
        properties:
          header:
            $ref: "#/definitions/BlockHeader"
          block_id:
            $ref: "#/definitions/BlockID"
      block:
        $ref: "#/definitions/Block"
  DelegationDelegatorReward:
    type: object
    properties:
      validator_address:
        $ref: "#/definitions/ValidatorAddress"
      reward:
        type: array
        items:
          $ref: "#/definitions/Coin"
  DelegatorTotalRewards:
    type: object
    properties:
      rewards:
        type: array
        items:
          $ref: "#/definitions/DelegationDelegatorReward"
      total:
        type: array
        items:
          $ref: "#/definitions/Coin"
  BaseReq:
    type: object
    properties:
      from:
        type: string
        example: "cosmos1g9ahr6xhht5rmqven628nklxluzyv8z9jqjcmc"
        description: Sender address or Keybase name to generate a transaction
      memo:
        type: string
        example: "Sent via Cosmos Voyager 🚀"
      chain_id:
        type: string
        example: "Cosmos-Hub"
      account_number:
        type: string
        example: "0"
      sequence:
        type: string
        example: "1"
      gas:
        type: string
        example: "200000"
      gas_adjustment:
        type: string
        example: "1.2"
      fees:
        type: array
        items:
          $ref: "#/definitions/Coin"
      simulate:
        type: boolean
        example: false
        description: Estimate gas for a transaction (cannot be used in conjunction with generate_only)
  TendermintValidator:
    type: object
    properties:
      address:
        $ref: "#/definitions/ValidatorAddress"
      pub_key:
        type: string
        example: cosmosvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
      voting_power:
        type: string
        example: "1000"
      proposer_priority:
        type: string
        example: "1000"
  TextProposal:
    type: object
    properties:
      proposal_id:
        type: integer
      title:
        type: string
      description:
        type: string
      proposal_type:
        type: string
      proposal_status:
        type: string
      final_tally_result:
        $ref: "#/definitions/TallyResult"
      submit_time:
        type: string
      total_deposit:
        type: array
        items:
          $ref: "#/definitions/Coin"
      voting_start_time:
        type: string
  Proposer:
    type: object
    properties:
      proposal_id:
        type: string
      proposer:
        type: string
  Deposit:
    type: object
    properties:
      amount:
        type: array
        items:
          $ref: "#/definitions/Coin"
      proposal_id:
        type: string
      depositor:
        $ref: "#/definitions/Address"
  TallyResult:
    type: object
    properties:
      yes:
        type: string
        example: "0.0000000000"
      abstain:
        type: string
        example: "0.0000000000"
      no:
        type: string
        example: "0.0000000000"
      no_with_veto:
        type: string
        example: "0.0000000000"
  Vote:
    type: object
    properties:
      voter:
        type: string
      proposal_id:
        type: string
      option:
        type: string
  Validator:
    type: object
    properties:
      operator_address:
        $ref: "#/definitions/ValidatorAddress"
      consensus_pubkey:
        type: string
        example: cosmosvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
      jailed:
        type: boolean
      status:
        type: integer
      tokens:
        type: string
      delegator_shares:
        type: string
      description:
        type: object
        properties:
          moniker:
            type: string
          identity:
            type: string
          website:
            type: string
          security_contact:
            type: string
          details:
            type: string
      bond_height:
        type: string
        example: "0"
      bond_intra_tx_counter:
        type: integer
        example: 0
      unbonding_height:
        type: string
        example: "0"
      unbonding_time:
        type: string
        example: "1970-01-01T00:00:00Z"
      commission:
        type: object
        properties:
          rate:
            type: string
            example: "0"
          max_rate:
            type: string
            example: "0"
          max_change_rate:
            type: string
            example: "0"
          update_time:
            type: string
            example: "1970-01-01T00:00:00Z"
  Delegation:
    type: object
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
      shares:
        type: string
      balance:
        $ref: "#/definitions/Coin"
  UnbondingDelegationPair:
    type: object
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
      entries:
        type: array
        items:
          $ref: "#/definitions/UnbondingEntries"
  UnbondingEntries:
    type: object
    properties:
      initial_balance:
        type: string
      balance:
        type: string
      creation_height:
        type: string
      min_time:
        type: string
  UnbondingDelegation:
    type: object
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
      initial_balance:
        type: string
      balance:
        type: string
      creation_height:
        type: integer
      min_time:
        type: integer
  Redelegation:
    type: object
    properties:
      delegator_address:
        type: string
      validator_src_address:
        type: string
      validator_dst_address:
        type: string
      entries:
        type: array
        items:
          $ref: "#/definitions/Redelegation"
  RedelegationEntry:
    type: object
    properties:
      creation_height:
        type: integer
      completion_time:
        type: integer
      initial_balance:
        type: string
      balance:
        type: string
      shares_dst:
        type: string
  ValidatorDistInfo:
    type: object
    properties:
      operator_address:
        $ref: "#/definitions/ValidatorAddress"
      self_bond_rewards:
        type: array
        items:
          $ref: "#/definitions/Coin"
      val_commission:
        type: array
        items:
          $ref: "#/definitions/Coin"
  PublicKey:
    type: object
    properties:
      type:
        type: string
      value:
        type: string
  SigningInfo:
    type: object
    properties:
      start_height:
        type: string
      index_offset:
        type: string
      jailed_until:
        type: string
      missed_blocks_counter:
        type: string
  ParamChange:
    type: object
    properties:
      subspace:
        type: string
        example: "staking"
      key:
        type: string
        example: "MaxValidators"
      subkey:
        type: string
        example: ""
      value:
        type: object
  Supply:
    type: object
    properties:
      total:
        type: array
        items:
          $ref: "#/definitions/Coin"
